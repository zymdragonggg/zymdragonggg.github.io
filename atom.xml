<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZYM&#39;Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zymdragonggg.github.io/"/>
  <updated>2020-03-11T08:32:11.784Z</updated>
  <id>http://zymdragonggg.github.io/</id>
  
  <author>
    <name>Amanda Z</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MarkDown语法</title>
    <link href="http://zymdragonggg.github.io/2020/03/11/markdown/"/>
    <id>http://zymdragonggg.github.io/2020/03/11/markdown/</id>
    <published>2020-03-11T07:51:28.000Z</published>
    <updated>2020-03-11T08:32:11.784Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了有关Markdown的语法。</p><a id="more"></a><p>本文参考了大树哥的博客，他和我说自己从新写一遍多浪费时间，让我直接用他的，然后我还是改动并且添加了一些内容，好了所以这一篇也是我的原创内容了！</p><p>所有使用Markdown语法标记的符号后要加一个空格<code>Space</code></p><h1 id="一、-标题"><a href="#一、-标题" class="headerlink" title="一、 标题"></a>一、 标题</h1><p>使用<code>#</code>来设置标题级数,一个<code>#</code>则代表一级标题,字体大小最大</p><p><code>#</code> </p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p><code>##一级标题</code></p><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p><code>###二级标题</code></p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p><code>####三级标题</code></p><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p><code>#####四级标题</code></p><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><p><code>######五级标题</code></p><h1 id="二、-列表"><a href="#二、-列表" class="headerlink" title="二、 列表"></a>二、 列表</h1><h2 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1. 无序列表"></a>1. 无序列表</h2><p>使用<code>-</code>、<code>+</code>、<code>*</code>三个符号都可以</p><ul><li>使用<code>-</code></li></ul><ul><li>使用<code>+</code></li></ul><ul><li>使用<code>*</code></li></ul><p>如果在列表中想取消下一行的列表性质,需要按下退格<code>Backspace</code>删除列表前的圆点后,然后按<code>Shift</code>+<code>Tab</code>组合键来退回首位.</p><ul><li>一级列表<ul><li>二级列表<ul><li>三级列表<ul><li>四级列表</li></ul></li></ul></li></ul></li></ul><h2 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2. 有序列表"></a>2. 有序列表</h2><p>数字加点加空格,如<code>1.[Space]</code>、<code>2.[Space]</code></p><p>需要往前挪动请按<code>Tab</code>键,往后挪动请按<code>Shift</code>+<code>Tab</code>组合键</p><ol><li>第一级</li><li>第二级<ol><li>第二级第一小节</li><li>第二级第二小节<ol><li>第二级第二小节第一小小节</li><li>第二级第二小节第二小小节</li></ol></li><li>第二级第三小节</li></ol></li><li>第三级</li></ol><h1 id="三、-字体"><a href="#三、-字体" class="headerlink" title="三、 字体"></a>三、 字体</h1><ul><li><p><em>斜体</em></p><p>用法:<code>*[内容]*</code>或<code>_[内容]_</code>,包含在两个<code>*</code>星号或两个<code>_</code>下划线中间的内容会倾斜</p><p><code>*Hello World*</code>:<em>Hello World</em></p><p><code>_Hello World_</code>:<em>Hello World</em></p></li><li><p><strong>加粗</strong></p><p>用法:<code>**[内容]**</code>,包含在四个<code>*</code>星号中间的内容会加粗</p><p><code>**Hello World**</code>:<strong>Hello World</strong></p></li><li><p><strong><em>斜体加粗</em></strong></p><p>用法:<code>***[内容]***</code>,包含在六个<code>*</code>星号中间的内容会加粗并斜体</p><p><code>***Hello World***</code>:<strong><em>Hello World</em></strong></p></li><li><p><del>删除线</del></p><p>用法:<code>~~[内容]~~</code>,包含在四个<code>~</code>波浪号中间的内容会添加删除线</p><p><code>~~Hello World~~</code>:<del>Hello World</del></p></li></ul><h1 id="四、-引用"><a href="#四、-引用" class="headerlink" title="四、 引用"></a>四、 引用</h1><p><code>&gt;</code>表示引用,与<code>#</code>用法相同</p><p><code>&gt;</code></p><blockquote><p>一级引用</p></blockquote><p><code>&gt;&gt;</code></p><blockquote><blockquote><p>二级引用</p></blockquote></blockquote><p><code>&gt;&gt;&gt;</code></p><blockquote><blockquote><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><p>退格使用<code>Shift</code>+<code>Tab</code></p><h1 id="五、-分割线"><a href="#五、-分割线" class="headerlink" title="五、 分割线"></a>五、 分割线</h1><p>大于等于三个的<code>-</code>或<code>+</code>或<code>*</code></p><p><code>---</code></p><hr><p><code>+++</code></p><p>+++</p><p><code>***</code></p><hr><h1 id="六、-图片"><a href="#六、-图片" class="headerlink" title="六、 图片"></a>六、 图片</h1><p>语法:<code>![图片文字](图片地址 &quot;鼠标放置时显示的信息&quot;)</code></p><p>例子:</p><p><code>![Queen](https://tva1.sinaimg.cn/large/00831rSTly1gcq09ook07j308c05k74c.jpg　”Your Majesty”)</code></p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcq09ook07j308c05k74c.jpg" alt="Queen"></p><h1 id="七、-超链接"><a href="#七、-超链接" class="headerlink" title="七、 超链接"></a>七、 超链接</h1><p>语法:<code>[超链接名](超链接地址 &quot;鼠标放置时显示的信息&quot;)</code></p><p>例子:<code>[百度一下,你就知道](www.baidu.com &quot;我就是百度&quot;)</code></p><p><a href="https://www.baidu.com" target="_blank" rel="noopener" title="我就是百度">百度一下,你就知道</a></p><h1 id="八、-代码"><a href="#八、-代码" class="headerlink" title="八、 代码"></a>八、 代码</h1><h2 id="1-单行"><a href="#1-单行" class="headerlink" title="1. 单行"></a>1. 单行</h2><p>使用<code>&#96;</code>反引号包裹</p><h2 id="2-多行-代码块"><a href="#2-多行-代码块" class="headerlink" title="2.多行,代码块"></a>2.多行,代码块</h2><p>使用三个反引号包裹</p><p><code>&#96;&#96;&#96;</code></p><p>使用<code>&#96;&#96;&#96;</code>+编程语言可以打开代码编辑器</p><p>如 <code>&#96;&#96;&#96;</code>+python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">这是一个python语法的编译器</span><br></pre></td></tr></table></figure><h1 id="九、-表格"><a href="#九、-表格" class="headerlink" title="九、 表格"></a>九、 表格</h1><p>每一行都使用<code>|</code>隔开</p><p>第二行使用<code>:</code>设置对齐,两边都加表示文字居中,加在左边表示居左</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|标题1|标题2|标题3|</span><br><span class="line">|-|:-:|:-|</span><br><span class="line">|1|2|3|</span><br></pre></td></tr></table></figure><table><thead><tr><th>标题1</th><th align="center">标题2</th><th align="left">标题3</th></tr></thead><tbody><tr><td>1</td><td align="center">2</td><td align="left">3</td></tr></tbody></table><h1 id="十、-流程图"><a href="#十、-流程图" class="headerlink" title="十、 流程图"></a>十、 流程图</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">​&#96;&#96;&#96;flow</span><br><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">op&#x3D;&gt;operation: My Operation</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">op&#x3D;&gt;operation: My Operation</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><h1 id="十一、-补充一些小Tips"><a href="#十一、-补充一些小Tips" class="headerlink" title="十一、 补充一些小Tips"></a>十一、 补充一些小Tips</h1><p>补充一些我常用到的小tips</p><p><strong>Tip 1 不显示全文</strong> </p><p>写博客时候我们希望首页不显示全文，只显示部分信息或者只放一个图片就OK，那么我们只要加入下列语法即可。例子如下</p><hr><p>这里放简单介绍</p><p><code>&lt;!--more--&gt;</code></p><p>这里放正文内容</p><hr><p><strong>Tip 2 文字居中</strong> </p><p>markdown似乎不支持居中，于是有一种类似html的操作，按照如下进行编写:</p><p>语法：<code>&lt;center&gt;诶，我居中了&lt;/center&gt;</code></p><p>结果：</p><center>诶，我居中了</center><p><strong>Tip 2 选个好用的markdown编辑器</strong></p><p>其实，如果不常用一些语法，完全可以使用markdown文档编辑器自带的编辑功能，只要选中要操作的内容，再去选择相应功能，就可以完成上述很多事情了。</p><p>我的是mac本，用的是<a href="https://typora.io/" target="_blank" rel="noopener">Typora</a>，Simple, yet Powerful.</p><p>简单干净，很喜欢这个markdown编辑器。其支持OS X，Windows，Linux</p><p>给你一个截图简单感受一下。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcq0x94qi5j30dk0fiagu.jpg" alt="操作界面"></p><p>好了今天的推送萌下线啦，好好学习。がんばります！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了有关Markdown的语法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="语言技能" scheme="http://zymdragonggg.github.io/categories/%E8%AF%AD%E8%A8%80%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="markdown" scheme="http://zymdragonggg.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>ナルト 青春无悔</title>
    <link href="http://zymdragonggg.github.io/2020/03/11/naruto/"/>
    <id>http://zymdragonggg.github.io/2020/03/11/naruto/</id>
    <published>2020-03-11T02:52:31.000Z</published>
    <updated>2020-03-11T08:08:02.104Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcpxeqd6l5j30d6088aag.jpg" alt="th"></p><p>本文纯属个人点滴记录以及感悟。</p><a id="more"></a><center>"わたしわ渦巻きなると！"</center><hr><p>我想我真的很爱这个动漫。</p><p>先采访一下儿时残留在记忆里的我：</p><blockquote><p>“大概初中的时候看的火影吧，那时候火影还没完结，等我看到差不多400集左右的时候我没有在看了，忘记什么原因不在看了，可能是没完结，可能学业太忙了。唯一当时留下的印象的就是，最后怎么各种复活？看不懂了，觉得剧情很混乱，但是当时仍然觉得这是一个很有趣的动漫，可能从小就是喜欢看那种一个小弱鸡变成大英雄的片子。”</p></blockquote><p>时光荏苒，转眼2020年，我24岁了，昨天（2020.3.10）我终于看完了已经完结了好几年的火影。</p><blockquote><p>“再次重新观看，我感受到了不同的心情，怎么说呢，就是有些悲伤和不舍，真的有一种觉得自己老了的感觉，看的时候经常看的噗嗤噗嗤忍不住的想笑，悲伤的时候可以哭到抽泣不止的那种，看完最后一集的时候，一回想起第一集鸣人的样子就会觉得，呀，结束了。然后眼眶就回湿润。”</p></blockquote><p>我会想念木叶村的蓝天白云的悠闲美丽时光，村民和谐生活时候的样子</p><p>我会想念鸣人就是当初的毛头小孩时无拘无束的样子</p><p>我会想念佐助趴在哥哥肩膀一脸幸福</p><p>我会想念鼬最后温柔的告诉佐助，“不管你今后的路想怎么走，我都会一直深爱着你。”</p><p>我会想念自来也和鸣人在的那个温暖的日子里，他们在树荫下，他为鸣人买来的雪糕一起谈笑的画面</p><p>我会难过自来也走后，鸣人自己拿着两个雪糕，独自坐在椅子上，路灯下，那滴在地上的泪水</p><p>我会想念白和再不斩</p><p>我会怀念千代婆婆最后那个和蔼的微笑</p><p>我会想念大战结束，鸣人笑着告诉父亲，妈妈嘱咐的我都好好做到了</p><p>我会想念鸣人结婚的时候，鸣人微微侧过的脸庞结巴地对伊鲁卡老师说出请他来以父亲的身份出席婚礼</p><p>我会想好多…</p><hr><p>再次重新的观看，带给我了太多感动，小时候只是觉得火影不过是个动漫而已，可是大了再看，这已经不再是个普通的动漫了。随说网上有很多人吐槽火影烂尾，但是我觉得还好，我依然被感动到稀里糊涂的。剧情有些地方确实不尽人意，但是总体我还是十分喜爱的。</p><p>我个人比较喜欢看电影和美剧，因为从小学过画画，也喜欢看动漫，但我看过的动漫不算多，不过火影真的爱。今天写下这个博文，也是想记录抒发一下自己的情感，感觉自从看完整个火影以后，一直陷在某种说不出的情绪中，可能中了伊邪那美吧哈哈哈哈哈，我相信自己很快就可以走出这个术的！</p><p>这个动漫看完以后有很多让我感到遗憾的时候，就是，自来也没能参加鸣人婚礼，不知道为啥，我真的好爱这个角色。看动漫的时候弹幕一条条的说如果自来也在的话一定会说：</p><center>“臭小子，结婚快乐！”</center><p>泪目啊啊啊啊。</p><p>还有一个很让我喜欢的角色就是鼬了，鼬当之无愧太帅了！爱吃甜食的鼬吃了一辈子的苦。太让人心疼了。</p><p>这里面我还比较喜欢的一个角色就是鹿丸，我喜欢聪明的脑袋瓜子，鹿丸也很帅啊。</p><p>还有卡卡西，不过他漏全脸的时候我为啥没有觉得特帅？？？</p><p>我甚至还有点喜欢蛇叔，最后几集蛇叔真的有点可爱</p><p>还有啊。。。。。（太多了，我真的一列举感觉太多了，几乎所有角色我都很喜欢）</p><p>呀我的九喇嘛！忘了提一嘴这个傲娇小宠物。</p><blockquote><p>只是一碎碎念起来以后就又会陷入感伤中…</p></blockquote><p>曾经看到Sir曾说过</p><blockquote><p>15年啊，当初守在电视、电脑前的那些人，如今已经走入社会。</p><p>生活中是房子、车子、老婆孩子，再要全身心追一部动漫，难。</p><p>青春只有一次，这才叫人怀念。</p></blockquote><p><strong>青春无悔入火影</strong>，非常感谢火影，给我感受到了很多，虽然嘴遁实属太强，但是我愿意让自己去发光发热给社会、祖国乃至世界带来温暖。和平可能永远不会真正到来，但是我心里ナルト一直在。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcpzmz1cc1j30k00m7ju5.jpg" alt="59ee2e4a674d05802c7d1cd2ae4634d9_720w"></p><center>私はいつもあなたを愛し</center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/00831rSTly1gcpxeqd6l5j30d6088aag.jpg&quot; alt=&quot;th&quot;&gt;&lt;/p&gt;
&lt;p&gt;本文纯属个人点滴记录以及感悟。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活点滴" scheme="http://zymdragonggg.github.io/categories/%E7%94%9F%E6%B4%BB%E7%82%B9%E6%BB%B4/"/>
    
    
      <category term="动漫" scheme="http://zymdragonggg.github.io/tags/%E5%8A%A8%E6%BC%AB/"/>
    
  </entry>
  
  <entry>
    <title>给Ubuntu服务器配置tensorflow2.0</title>
    <link href="http://zymdragonggg.github.io/2020/03/07/aliyunsetting/"/>
    <id>http://zymdragonggg.github.io/2020/03/07/aliyunsetting/</id>
    <published>2020-03-07T13:28:17.000Z</published>
    <updated>2020-03-08T03:07:48.290Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍如何在各种服务器上配置tensorflow机器学习框架。</p><a id="more"></a><h1 id="安装conda"><a href="#安装conda" class="headerlink" title="安装conda"></a>安装conda</h1><p>业余的我只知道<a href="https://www.anaconda.com/" target="_blank" rel="noopener">Conda</a>是一个很好的用来管理环境的工具，好了上专业点的解释：</p><p><em>conda类似于npm或maven的包管理工具，只是conda是针对于python的。可以安装minconda或anaconda进行安装，前者是简化版本，只包含conda和其依赖。如果安装环境有python相关包也没有关系，不需要进行卸载。anaconda支持windows、mac和linux系统，且有两个类型的版本，分别是GUI和command line版本，前者是图形界面，后者是命令行界面，占用资源较少。</em></p><p>那么我们在服务器上配置的时候其实用<strong>minconda</strong>就好了，废话不多少，开始上第一步。</p><p>在需要配置的服务器，依次输入下列命令</p><ul><li>下载miniconda</li></ul><p><code>wget https://repo.continuum.io/miniconda/Miniconda3-4.6.14-Linux-x86_64.sh</code></p><ul><li>安装miniconda</li></ul><p><code>sh Miniconda3-4.6.14-Linux-x86_64.sh</code></p><p>一路yes和 回车。</p><p>回到根目录</p><p><code>source ~/.bashrc</code></p><ul><li>更新conda</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda update conda</span><br><span class="line">conda update --all</span><br><span class="line">apt-get update</span><br></pre></td></tr></table></figure><p>至此conda安装完毕，接下来进入虚拟环境管理</p><h1 id="用Conda配置虚拟环境"><a href="#用Conda配置虚拟环境" class="headerlink" title="用Conda配置虚拟环境"></a>用Conda配置虚拟环境</h1><ul><li>创建 名字为your-name的，python版本为3.6的虚拟环境</li></ul><p><code>conda create -n your-name python = 3.6 #这里可以自己根据自己需求选择</code></p><ul><li>打开虚拟环境</li></ul><p><code>conda activate your-name</code> </p><ul><li>关闭虚拟环境</li></ul><p><code>conda deactivate</code> </p><ul><li>安装需要用到的package</li></ul><p><code>conda install package-name</code></p><p>基于本文需求，我们这里安装tensorflow2.0这个package</p><p><code>conda install tensorflow</code></p><p>也可以指定tf的版本，不过默认的话目前会下载tf2.0。</p><p>至于gpu版本的tensorflow因为我用不到，所以我没研究。。。。。。。。。。。。好，避免尴尬，下一步吧^-^</p><h1 id="测试tf是否安装成功"><a href="#测试tf是否安装成功" class="headerlink" title="测试tf是否安装成功"></a>测试tf是否安装成功</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;<span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">&gt;&gt;print(tf.\_\_version\_\_)  <span class="comment">#注意这里两个总共四个下划线</span></span><br><span class="line"><span class="number">2.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>Ok 啦，今天的小教程结束了！！！</p><p>其实这是我给自己用的要不然每次查太累了。加油！go go go!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍如何在各种服务器上配置tensorflow机器学习框架。&lt;/p&gt;
    
    </summary>
    
    
      <category term="基础应用" scheme="http://zymdragonggg.github.io/categories/%E5%9F%BA%E7%A1%80%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="conda" scheme="http://zymdragonggg.github.io/tags/conda/"/>
    
      <category term="Tensorflow2.0" scheme="http://zymdragonggg.github.io/tags/Tensorflow2-0/"/>
    
  </entry>
  
  <entry>
    <title>在Mac上用Hexo快速搭建Github个人博客</title>
    <link href="http://zymdragonggg.github.io/2020/03/03/hexo_github/"/>
    <id>http://zymdragonggg.github.io/2020/03/03/hexo_github/</id>
    <published>2020-03-03T13:35:23.000Z</published>
    <updated>2020-03-08T03:07:45.687Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要是介绍在Mac上利用Hexo以及Github pages快速搭建一个个人博客。整体流程非常简单，按步骤来就可以。</p><a id="more"></a><p>搭建前提：拥有一个Github账号 + 有耐心。。。</p><h1 id="知识简介"><a href="#知识简介" class="headerlink" title="知识简介"></a>知识简介</h1><ul><li><strong>Hexo</strong></li></ul><p>Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。</p><ul><li><strong>GitHub pages</strong></li></ul><p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。</p><h1 id="环境准备："><a href="#环境准备：" class="headerlink" title="环境准备："></a>环境准备：</h1><p>因为Hexo是基于Node.js的，环境搭建过程中还需要使用npm和git，因此需要先安装Node.js和Git。</p><ul><li><p>下载<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js</a></p></li><li><p>下载 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></p></li></ul><p>下载并安装，按默认配置完成安装ok。</p><p>安装完成后，打开终端terminal，输入下列命令，并对应输出结果说明安装成功。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcjgf5bd06j307a02jdfw.jpg" alt="test1"> </p><h1 id="连接Github"><a href="#连接Github" class="headerlink" title="连接Github"></a>连接Github</h1><p>拿出你的Github账号。比如就叫账号就是：  <em>邮箱</em> </p><p>接下来<strong>创建SSH密匙</strong>。输入下列命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><p>然后一路回车。OK</p><ul><li><strong>添加密匙</strong>：</li></ul><p>进入 <em>/Users/用户名/.ssh</em> 目录，找到id_rsa.pub文件并复制里面的内容，登陆Github，进入到settings界面，选择左边栏的SSH and GPG keys,点击 New SSH key。 title名字可以随意取，复制的id_rsa.pub内容现在粘贴在key中，点击Add SSH key添加完成。</p><ul><li><strong>验证连接</strong>：</li></ul><p>在终端输入  ssh -T <a href="mailto:git@github.com">git@github.com</a> ， 问你‘are you sure’， 然后 输入 yes回车</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcjgfd01rbj30ek03t0tk.jpg" alt="ssh"></p><p>上图表示已经连接成功了！OK</p><h1 id="创建Github-Pages仓库"><a href="#创建Github-Pages仓库" class="headerlink" title="创建Github Pages仓库"></a>创建Github Pages仓库</h1><p>GitHub 主页右上角加号 -&gt; New repository：</p><ul><li><p>Repository name 中输入 <code>用户名.github.io</code> (<em>注意这里必须和你用户名保持一致</em>)</p></li><li><p>Description选填</p></li><li><p>设定为Public</p></li><li><p>勾选 “Initialize this repository with a README”</p></li></ul><p>填好后点击 Create repository 创建。创建后默认自动启用 HTTPS，博客地址为：<code>https://用户名.github.io</code></p><h1 id="本地安装-Hexo-博客程序"><a href="#本地安装-Hexo-博客程序" class="headerlink" title="本地安装 Hexo 博客程序"></a>本地安装 Hexo 博客程序</h1><p>接下来开始使用npm 安装Hexo 博客程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>注意需要获取管理员权限，由此需要输入开机密码。</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcjgfi62eyj30e6020mxj.jpg" alt="installhexo"></p><p>出现上图所示那就说明安装成功了。</p><p>新建一个文件夹用来存放 Hexo 的程序文件，如 Blog。</p><p>终端切换到Blog的路径：cd /Users/m/Documents/Blog这是我存放Blog的路径。</p><p>接下来依次输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init      # 初始化</span><br><span class="line">npm install    # 安装组件</span><br></pre></td></tr></table></figure><p>完成后依次输入下面命令，<strong>启动本地服务器进行预览</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo s   # 启动预览</span><br></pre></td></tr></table></figure><p><strong>访问</strong> <code>http://localhost:4000</code><strong>，出现 Hexo 默认页面，本地博客安装成功！</strong>OK</p><p><strong>Tips：</strong>如果出现页面加载不出来，可能是端口被占用了。Ctrl+C 关闭服务器，运行 <code>hexo server -p 5000</code> 更改端口号后重试。</p><p>输入命令 ls 查看你的blod文件目录：</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gcjgfmiv0cj30dw01tgls.jpg" alt="ls"></p><p>其中config是网站的配置信息，package是应用程序的信息，scaffolds是模板文件夹，source是存放用户资源的（Markdown文档）themes是主题文件夹，public是网站文件。</p><h1 id="部署-Hexo-到-GitHub-Pages"><a href="#部署-Hexo-到-GitHub-Pages" class="headerlink" title="部署 Hexo 到 GitHub Pages"></a>部署 Hexo 到 GitHub Pages</h1><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p><p>首先<strong>安装 hexo-deployer-git</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后<strong>修改 _config.yml</strong> 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:用户名&#x2F;用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p><p>完成！这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了。</p><h1 id="发布博文"><a href="#发布博文" class="headerlink" title="发布博文"></a>发布博文</h1><p>进入Blog所在目录，创建博文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;name&quot;</span><br></pre></td></tr></table></figure><p>然后 source 文件夹中会出现一个 name.md 文件，就可以使用 Markdown 编辑器在该文件中撰写文章了。</p><p>写完后运行下面代码将文章渲染并部署到 GitHub Pages 上完成发布。<strong>以后每次发布文章都是这两条命令。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo d   # 部署发布</span><br></pre></td></tr></table></figure><p>也可以一句话直接生成并部署如下句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d             # 生成页面并部署</span><br></pre></td></tr></table></figure><p>其他命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo s                # 本地预览</span><br><span class="line">hexo s --debug        # 本地预览调试</span><br><span class="line">hexo clean            # 清除缓存和已生成的静态文件</span><br><span class="line">hexo help             # 帮助</span><br></pre></td></tr></table></figure><h1 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h1><p>我们博客的主题文件夹都放在根目录下的themes中，我们可以看到默认的主题是landscape。我猜大多数人是不喜欢的，那么可以选择其他的主题在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo的主题网站</a>上，不过建议新手的我们乖乖用最热门的主题NexT吧，而且这个主题相当简洁优雅有档(Bi)次(Ge)。</p><p>直接在终端 cd 到博客根目录，然后输入下列命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><p><em>note：我在本地下载的时候很慢，于是我用了阿里云服务器进行的下载，下载之后用Filezilla又下载到了本地，然后将next主题放到themes文件夹下，如果网速好，可以科学上网的请忽略本条注释。</em></p><p>完成下载后在站点目录中搜索关键字 theme。修改其内容如下</p><p><img src="https://tva1.sinaimg.cn/large/00831rSTly1gckl8qnnhrj30bq02twet.jpg" alt="image-20200306224250629"></p><p>保存，发布并预览   hexo g -d. !</p><p>快去看看是不是现在变好看了好多？</p><h1 id="主题优化-1"><a href="#主题优化-1" class="headerlink" title="主题优化"></a>主题优化</h1><p>剩下的进行更细节的网站设计，大家去查询吧！</p><p>推荐一个我主要参考的<a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">主题优化</a>的网站。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>最后的最后要有一个conclusion 和 future work。</p><p>博客是我辛辛苦苦搭建了近两天，特别感谢我的大树哥铺好的路，让我少走不少弯路，我在自己的菜单页推荐了我可爱的大树哥，大家可以向他好好学习（不知道为什么越写越像致谢）。</p><p>不过还好多出问题没有解决，但是整个博客做好以后真的是开心的不得了呀！以后要努力写博客！加油！o^_^o</p><p><strong>博客有问题或者我哪里写的不对请大家可以用旁边的信息私聊我呀～</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要是介绍在Mac上利用Hexo以及Github pages快速搭建一个个人博客。整体流程非常简单，按步骤来就可以。&lt;/p&gt;
    
    </summary>
    
    
      <category term="基础应用" scheme="http://zymdragonggg.github.io/categories/%E5%9F%BA%E7%A1%80%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="Hexo" scheme="http://zymdragonggg.github.io/tags/Hexo/"/>
    
      <category term="Github Pages" scheme="http://zymdragonggg.github.io/tags/Github-Pages/"/>
    
  </entry>
  
</feed>
